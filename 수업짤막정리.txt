관계형 데이터베이스 (RDB)
- 중복제거
- 데이터 무결성을 보장
- RDBMS가 전체 데이터베이스(RDB) 를 관리

데이터베이스 용어
- PK : 테이블의 행을 구별해주는 컬럼, 시퀀스로 키를 하기도함 (중복이없음) , 키를 숫자로하면 JOIN할때 빠르다 (NOT NULL, UNIQUE)
- FK : 다른테이블의 PK
- Column : | 
- row : 컬럼들의 값조합 ->
- feild 
- 뷰 : 논리적인 가상테이블
- 시퀀스 : 자동으로 고유한 숫자값 생성
- 인덱스 : 쿼리속도 향상, 성능에 대한 이해가 필요
- 시노님 : 별명
- 프로그램 유닛 : PL/SQL (성능이 정말 필요할때만)

권한과 역할
ROLE로 나눠놨다. 

DML - 테이블 생성 및 데이터 조작
데이터타입
VARCHER2 - 가변길이 : 최대 2000 
CHAR - 고정길이 : 최대 255 / 고정길이는 그 값을 정확히 채워야됨 EX) 성별, 이런식으로 정확한 값이 들어가는경우 //불리하다.
NUMBER - 38자리까지 유효한 부동 소수점숫자
NUMBER(p,s) 

------------------------------------------------------
DML - DELETE : 삭제 (ROLLBACK O)
DDL - TRUNCATE 전체삭제 (ROLLBACK X)
------------------------------------------------------

테이블 생성
CREATE TABLE 테이블명 ( ) 

데이터 수정
UPDATE 테이블명
SET 칼럼 1 = 값1 , ....
WHERE 조건식
// ------------------------>SELECT 를 먼저하고 해야한다. 잘못된 데이터를 변경할 수 있음

DELETE 테이블에서 행을 삭제
DELETE FROM 테이블명
WHERE 조건식 

DISTINCT 는 나열된 모든 SELECT을 중복제거
ORDER BY 는 가장마지막에 , ASC 는 오름차순 , DESC는 내림차순

★ 논리 비교연산자, SQL 비교연산자의 부정
논리 비교 연산자 : != , <>, ^=
SQL 비교 연산자 : NOT BETWEEN ~ AND ~
                        NOT IN
                        NOT LIKE
	           IS NOT NULL

비교 연산자 사용할때 자동 형변환에 의지하지말자

날짜 + 숫자 = 날짜
날짜 - 숫자 = 날짜
날짜 - 날짜 = 숫자

그룹함수의 종류
통계 = STDDEV(a)-표준편차 , Variance(e) - 분산

 SET 연산자
- UNION 과 UNION ALL의 차이 알기
- UNION이 더 걸림

CONSTRAINT
잘못된 데이터들이 들어오지 않게하려고
1. NOT NULL
2. UNIQUE
3. PK - NOT NULL + UNIQUE
4. FK - 널값 OK
5. CHECK - 반드시 참이여야함

TRANSACTION
- 논리적인 업무의 작업단위
- 작업중에는 LOCK 걸림
- COMMIT . ROLLBACK 시 풀림
- DDL, DCL : 자동커밋

Dictionary
- 읽기전용으로만 제공되는 뷰와 테이블의 집합
-  sys 사용자가 소유\

DDL - create , drop, alter, truncate ,rename, commit : rollback불가능

인덱스
- 논리적, 물리적으로 테이블과 '독립적'
- 자동 생성 (unique)되기도 하고 만들수도있음
- b*tree : 키 + rowid
- 소량검색에 유리
- 조건절이나 join 조건에서 컬럼을 자주 이용할때
-- <> :  테이블이 작을때 ,  자주 변경될때 


오라클 최적화
- 비용기준 최적화 : 통계정보를 분석해서 

NVL
NVL(형식1, 형식2)
형식 1 : NULL을 포함하고있는 컬럼이나 식
형식 2 : 변경하려는 값

상관쿼리
- 메인쿼리를 만들고 그 값을 서브쿼리에서 가져다가 쓴다.
- ANY : 하나라도 있으면 참
  ALL : 전부다 있어야 참
  EXIST : 값이 있어야 참

INDEX !
-  변형하지 않을경우 사용해야함
-  인덱스는 부정에서 사용할 수 없음 부정 -> 긍정으로 바꿔야된다 // <> --> NOT EXIST     
  

